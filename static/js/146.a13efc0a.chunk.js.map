{"version":3,"file":"static/js/146.a13efc0a.chunk.js","mappings":"uQAAA,IAAMA,EAAc,gCACdC,EAAM,mCAECC,EAAc,WACzB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA+CC,IAAOG,MAAK,SAAAC,GAAG,OACxEA,EAAIC,MADoE,GAG3E,EACYC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAwBQ,EAAxB,oBAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAC/DA,EAAIC,MAD2D,GAGlE,EACYG,EAAiB,SAAAD,GAC5B,OAAOL,MAAM,GAAD,OACPH,EADO,kBACcQ,EADd,4BACoCP,EADpC,oBAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EACYI,EAAoB,SAAAF,GAC/B,OAAOL,MAAM,GAAD,OACPH,EADO,iBACaQ,EADb,4BACmCP,EADnC,2BAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EACYK,EAAmB,SAAAC,GAC9B,OAAOT,MAAM,GAAD,OACPH,EADO,gCAC4BC,EAD5B,iCACwDW,EADxD,gCAEVR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,C,oHCvBc,SAASO,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAeK,GAASV,MAAK,SAAAgB,GAC3BF,EAAQE,EAAKH,KACd,GACF,GAAE,CAACH,EAASI,KAEX,8BACGD,EACGA,EAAKI,KAAI,SAAAC,GACP,IAAMC,EAAUD,EAAEE,aAAF,yCACsBF,EAAEE,cACpC,GACJ,OACE,4BACE,gBAAKC,IAAKF,EAASG,IAAI,GAAGC,MAAM,SAChC,wBAAKL,EAAEV,QACP,yCAAiBU,EAAEM,cACnB,oBAJQN,EAAEO,UAOf,IACD,IAGT,C","sources":["components/FetchMovies.js","components/components/Cast.js"],"sourcesContent":["const defaultPath = 'https://api.themoviedb.org/3/';\nconst KEY = '7b36b29d9e4c5abba40ea0b1383df48c';\n\nexport const fetchTrends = () => {\n  return fetch(`${defaultPath}/trending/movie/week?api_key=${KEY}`).then(res =>\n    res.json()\n  );\n};\nexport const fetchMovieByid = id => {\n  return fetch(`${defaultPath}movie/${id}?api_key=${KEY}`).then(res =>\n    res.json()\n  );\n};\nexport const fetchCastMovie = id => {\n  return fetch(\n    `${defaultPath}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(res => res.json());\n};\nexport const fetchReviewsMovie = id => {\n  return fetch(\n    `${defaultPath}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(res => res.json());\n};\nexport const fetchSearchMovie = name => {\n  return fetch(\n    `${defaultPath}search/movie?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  ).then(res => res.json());\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastMovie } from 'components/FetchMovies';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCastMovie(movieId).then(data => {\n      setCast(data.cast);\n    });\n  }, [movieId, setCast]);\n  return (\n    <>\n      {cast\n        ? cast.map(e => {\n            const imgPath = e.profile_path\n              ? `https://image.tmdb.org/t/p/w500${e.profile_path}`\n              : '';\n            return (\n              <div key={e.credit_id}>\n                <img src={imgPath} alt=\"\" width=\"100\" />\n                <h3>{e.name}</h3>\n                <div>Character: {e.character}</div>\n                <br />\n              </div>\n            );\n          })\n        : ''}\n    </>\n  );\n}\n\n/*\n<div>\n  <img\n    src={`https://image.tmdb.org/t/p/w500${e.profile_path}`}\n    alt=\"\"\n    width=\"100\"\n  />\n  <h3>{e.name}</h3>\n  <div>Character: {e.character}</div>\n</div>\n*/\n"],"names":["defaultPath","KEY","fetchTrends","fetch","then","res","json","fetchMovieByid","id","fetchCastMovie","fetchReviewsMovie","fetchSearchMovie","name","Cast","movieId","useParams","useState","cast","setCast","useEffect","data","map","e","imgPath","profile_path","src","alt","width","character","credit_id"],"sourceRoot":""}