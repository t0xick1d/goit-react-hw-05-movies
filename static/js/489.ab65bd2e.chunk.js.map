{"version":3,"file":"static/js/489.ab65bd2e.chunk.js","mappings":"uQAAA,IAAMA,EAAc,gCACdC,EAAM,mCAECC,EAAc,WACzB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA+CC,IAAOG,MAAK,SAAAC,GAAG,OACxEA,EAAIC,MADoE,GAG3E,EACYC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAwBQ,EAAxB,oBAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAC/DA,EAAIC,MAD2D,GAGlE,EACYG,EAAiB,SAAAD,GAC5B,OAAOL,MAAM,GAAD,OACPH,EADO,kBACcQ,EADd,4BACoCP,EADpC,oBAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EACYI,EAAoB,SAAAF,GAC/B,OAAOL,MAAM,GAAD,OACPH,EADO,iBACaQ,EADb,4BACmCP,EADnC,2BAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EACYK,EAAmB,SAAAC,GAC9B,OAAOT,MAAM,GAAD,OACPH,EADO,gCAC4BC,EAD5B,iCACwDW,EADxD,gCAEVR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,C,6EC+CD,UAtEe,WACb,OAAoCO,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACM,OAAVF,IAGJV,EAAAA,EAAAA,IAAiBU,GAAOjB,MAAK,SAAAoB,GAC3BP,EAAaO,EAAKC,QACnB,GACF,GAAE,CAACJ,IAcJ,OACE,4BACE,kBAAMK,SAdW,SAAAC,GACnBA,EAAEC,iBACwB,KAAtBd,EAAWe,SAGfT,EAAgB,CAAEC,MAAOP,KACzBH,EAAAA,EAAAA,IAAiBG,GAAYV,MAAK,SAAAoB,GAChCP,EAAaO,EAAKC,SAClBV,EAAc,GACf,IACF,EAIiCe,MAAO,CAAEC,YAAa,QAApD,WACE,kBAAOC,QAAQ,gBACf,kBACEC,KAAK,OACLzB,GAAG,aACHI,KAAK,SACLsB,MAAOpB,EACPqB,SAAU,SAAAR,GACRZ,EAAcY,EAAES,cAAcF,MAC/B,EACDG,aAAa,WAEf,mBAAQJ,KAAK,SAAb,wBAEF,wBACGjB,GACCA,EAAUsB,KAAI,SAAAX,GACZ,OACE,yBACE,UAAC,KAAD,CACEY,GAAE,kBAAaZ,EAAEnB,IACjBgC,MAAO,CAAEC,KAAK,iBAAD,OAAmBpB,IAFlC,WAIE,gBACEqB,IACEf,EAAEgB,YAAF,yCACsChB,EAAEgB,aACpC,GAENC,IAAI,GACJC,MAAM,QAEPlB,EAAEmB,mBAdEnB,EAAEnB,GAkBd,QAIV,C","sources":["components/FetchMovies.js","components/pages/Movies.js"],"sourcesContent":["const defaultPath = 'https://api.themoviedb.org/3/';\nconst KEY = '7b36b29d9e4c5abba40ea0b1383df48c';\n\nexport const fetchTrends = () => {\n  return fetch(`${defaultPath}/trending/movie/week?api_key=${KEY}`).then(res =>\n    res.json()\n  );\n};\nexport const fetchMovieByid = id => {\n  return fetch(`${defaultPath}movie/${id}?api_key=${KEY}`).then(res =>\n    res.json()\n  );\n};\nexport const fetchCastMovie = id => {\n  return fetch(\n    `${defaultPath}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(res => res.json());\n};\nexport const fetchReviewsMovie = id => {\n  return fetch(\n    `${defaultPath}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(res => res.json());\n};\nexport const fetchSearchMovie = name => {\n  return fetch(\n    `${defaultPath}search/movie?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  ).then(res => res.json());\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchSearchMovie } from 'components/FetchMovies';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [listMovie, setListMovie] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n    fetchSearchMovie(query).then(data => {\n      setListMovie(data.results);\n    });\n  }, [query]);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n      return;\n    }\n    setSearchParams({ query: inputValue });\n    fetchSearchMovie(inputValue).then(data => {\n      setListMovie(data.results);\n      setInputValue('');\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmitForm} style={{ paddingLeft: '40px' }}>\n        <label htmlFor=\"searchForm\"></label>\n        <input\n          type=\"text\"\n          id=\"searchForm\"\n          name=\"search\"\n          value={inputValue}\n          onChange={e => {\n            setInputValue(e.currentTarget.value);\n          }}\n          autoComplete=\"false\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {listMovie &&\n          listMovie.map(e => {\n            return (\n              <li key={e.id}>\n                <Link\n                  to={`/movies/${e.id}`}\n                  state={{ from: `/movies?query=${query}` }}\n                >\n                  <img\n                    src={\n                      e.poster_path\n                        ? `https://image.tmdb.org/t/p/w500${e.poster_path}`\n                        : ''\n                    }\n                    alt=\"\"\n                    width=\"100\"\n                  />\n                  {e.original_title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["defaultPath","KEY","fetchTrends","fetch","then","res","json","fetchMovieByid","id","fetchCastMovie","fetchReviewsMovie","fetchSearchMovie","name","useState","inputValue","setInputValue","listMovie","setListMovie","useSearchParams","searchParams","setSearchParams","query","get","useEffect","data","results","onSubmit","e","preventDefault","trim","style","paddingLeft","htmlFor","type","value","onChange","currentTarget","autoComplete","map","to","state","from","src","poster_path","alt","width","original_title"],"sourceRoot":""}