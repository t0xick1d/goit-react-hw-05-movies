{"version":3,"file":"static/js/679.f222e8b5.chunk.js","mappings":"uQAAA,IAAMA,EAAc,gCACdC,EAAM,mCAECC,EAAc,WACzB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA+CC,IAAOG,MAAK,SAAAC,GAAG,OACxEA,EAAIC,MADoE,GAG3E,EACYC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAwBQ,EAAxB,oBAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAC/DA,EAAIC,MAD2D,GAGlE,EACYG,EAAiB,SAAAD,GAC5B,OAAOL,MAAM,GAAD,OACPH,EADO,kBACcQ,EADd,4BACoCP,EADpC,oBAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EACYI,EAAoB,SAAAF,GAC/B,OAAOL,MAAM,GAAD,OACPH,EADO,iBACaQ,EADb,4BACmCP,EADnC,2BAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EACYK,EAAmB,SAAAC,GAC9B,OAAOT,MAAM,GAAD,OACPH,EADO,gCAC4BC,EAD5B,iCACwDW,EADxD,gCAEVR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,C,8ECUD,UAjCgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAYA,OAXAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAkBG,GAAST,MAAK,SAAAiB,GACF,IAAxBA,EAAKC,QAAQC,QAIjBN,EAAWI,EAAKC,SAChBH,EAAU,SAJRA,EAAU,WAKb,GACF,GAAE,CAACN,KAGF,gCACc,SAAXK,GACCF,EAAQQ,KAAI,SAAAC,GACV,OACE,4BACE,wBAAKA,EAAEC,UACP,uBAAID,EAAEE,YAFEF,EAAEjB,GAKf,IACS,aAAXU,IACC,wEAIP,C","sources":["components/FetchMovies.js","components/components/Reviews.js"],"sourcesContent":["const defaultPath = 'https://api.themoviedb.org/3/';\nconst KEY = '7b36b29d9e4c5abba40ea0b1383df48c';\n\nexport const fetchTrends = () => {\n  return fetch(`${defaultPath}/trending/movie/week?api_key=${KEY}`).then(res =>\n    res.json()\n  );\n};\nexport const fetchMovieByid = id => {\n  return fetch(`${defaultPath}movie/${id}?api_key=${KEY}`).then(res =>\n    res.json()\n  );\n};\nexport const fetchCastMovie = id => {\n  return fetch(\n    `${defaultPath}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(res => res.json());\n};\nexport const fetchReviewsMovie = id => {\n  return fetch(\n    `${defaultPath}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(res => res.json());\n};\nexport const fetchSearchMovie = name => {\n  return fetch(\n    `${defaultPath}search/movie?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  ).then(res => res.json());\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchReviewsMovie } from 'components/FetchMovies';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    fetchReviewsMovie(movieId).then(data => {\n      if (data.results.length === 0) {\n        setStatus('noComent');\n        return;\n      }\n      setReviews(data.results);\n      setStatus('show');\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'show' &&\n        reviews.map(e => {\n          return (\n            <div key={e.id}>\n              <h3>{e.author}</h3>\n              <p>{e.content}</p>\n            </div>\n          );\n        })}\n      {status === 'noComent' && (\n        <div>We don`t have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["defaultPath","KEY","fetchTrends","fetch","then","res","json","fetchMovieByid","id","fetchCastMovie","fetchReviewsMovie","fetchSearchMovie","name","movieId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","data","results","length","map","e","author","content"],"sourceRoot":""}